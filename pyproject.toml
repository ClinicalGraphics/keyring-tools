# ===== Project info

[project]
name = "keycmd"
version = "0.7.0"
description = "Safely source your secrets and credentials from the OS keyring"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Korijn van Golen" }]
keywords = ["keyring", "secrets", "credentials", "environment"]
requires-python = ">= 3.9"
dependencies = [
    "keyring~=24.3.0",
    "tomli~=2.0.1",
    "shellingham~=1.5.4"
]

[project.optional-dependencies]
dev = [
    "ruff~=0.1.8",
    "twine~=4.0.2",
    "pytest~=7.4.3"
]

[project.scripts]
keycmd = 'keycmd.cli:main'

[project.urls]
Repository = "https://github.com/Korijn/keycmd"

# ===== Building

# Flit is great solution for simple pure-Python projects.
[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

# ===== Tooling

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["F", "E", "W", "N", "B", "RUF"]
ignore = [
    "E501",   # Line too long
    "E731",   # Do not assign a `lambda` expression, use a `def`
    "B019",   # Use of `functools.lru_cache` or `functools.cache` on methods can lead to memory leaks
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`"
]

[tool.ruff.lint.per-file-ignores]
"keycmd/logs.py" = ["T201"]

# example config for development and testing
[tool.keycmd.keys]
ARTIFACTS_TOKEN = { credential = "azure@poetry-repository-main", username = "azure" }

[tool.keycmd.aliases]
ARTIFACTS_TOKEN_B64 = { key = "ARTIFACTS_TOKEN", b64 = true }
